Elmi Aden
CNE-350
6/11/2025
Task:
A final project about Raspberry Pi Internet Speed Monitor project

In this project the Raspberry Pi internet speed monitoring will be useful to monitor how your download speed, upload speed, and ping change over time. This will help determine when your network might be at peak capacity or if you're experiencing a degraded internet connection.
To achieve this internet speed monitor, a Python script will be used to interact with a program called Speedtest CLI from Ookla. Thus, Speedtest CLI will be used for the internet speed monitor and to monitor the internet connection.
The program works by polling the popular speedtest.net service to get your ping, download speed, and upload speed.

How to configure Raspberry Pi internet speed monitor

Open the terminal of the Pi  
Update the package list:  
sudo apt update  

Upgrade existing packages:  
sudo apt full-upgrade -y  

Install the python pip package manager:  
sudo apt install python3-pip -y  

Install the speedtest-cli package:  
sudo pip3 install speedtest-cli  

Test your internet with the CLI tool:  
speedtest-cli  

Use the simple mode to show just the speed:  
speedtest-cli --simple 

Next write the python script to run the speedtest-cli

Begin writing the python script:  
sudo nano speedtest.py  
Paste the following Python script:

import os

import re

import subprocess

import time

response = subprocess.Popen('/usr/local/bin/speedtest-cli --simple', shell=True, stdout=process.PIPE).stdout.read().decode('utf8')

Ping = re.findall('Ping:\s(.*?)\s' , response, re.MULTILINE)

download = re.findall('Download:\s(.*?)\s', response, re.MULTILINE)

upload = re.findall('Upload:\s(.*?)\s', response, re.MULTILINE)

ping = ping[0].replace('.', ',')

download = download[0].replace('.', '.')

upload = upload[0].replace('.', '.')

try:

	f = open('/home/pi/speedtest/speedtest.cvs', 'a+')

	if os.stat('/home/pi/speedtest/speedtest.csv').st_size == 0:

		f.write('Date,Time,Ping(ms),Download(Mbit/s),upload(Mbit/s)\r\n')

except:
	pass

f.write('{},{},{},{},{}\r\n'.format(time.strftime('%m/%d/%y'), time.strftime('%H:%M'),ping, download, upload))

Create the folder for our speedtest file
	mkdir ~/speedtest
	
Run the speedtest.py script
python3 ~/speedtest.py

Check the result by opening the speedtest.csv file
nano ~/speedtest/speedtest.csv

Modify the crontab
crontab -e
(if asked which editor choose nano)

This schedules the speedtest to run every minute
(You can use https://pimylifeup.com/cron-jobs-and-crontab/ to calculate a different schedule)
* * * * * /usr/bin/python3 /home/pi/speedtest.py
Save using: Ctrl + X, then Y, then Enter

You can wait for a few minutes to get more data
Then again modify the speedtest.csv
nano /home/pi/speedtest/speedtest.csv
